import torch
from torch import nn, optim
from torch.utils.data import Dataset, DataLoader
import numpy as np

# 提供されたデータ
samples = [
    {'atomic_numbers': np.array([78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78]), 'adsorption_energy': -0.1849839673041687, 'rank': 5},
    {'atomic_numbers': np.array([78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78]), 'adsorption_energy': -0.12388265139058607, 'rank': 6},
    {'atomic_numbers': np.array([78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78]), 'adsorption_energy': -0.1849839673041687, 'rank': 5},
    {'atomic_numbers': np.array([78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78]), 'adsorption_energy': -0.09300284921151018, 'rank': 7},
    {'atomic_numbers': np.array([78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78]), 'adsorption_energy': -0.07815589528275577, 'rank': 8},
    {'atomic_numbers': np.array([78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78]), 'adsorption_energy': 0.3188310614203995, 'rank': 9},
    {'atomic_numbers': np.array([78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78, 78]), 'adsorption_energy': 0.7602581926263335, 'rank': 10}
]

# カスタムデータセット
class AtomicDataset(Dataset):
    def __init__(self, samples):
        self.samples = samples

    def __len__(self):
        return len(self.samples)

    def __getitem__(self, idx):
        atomic_numbers = torch.tensor(self.samples[idx]['atomic_numbers'], dtype=torch.float32)
        adsorption_energy = torch.tensor(self.samples[idx]['adsorption_energy'], dtype=torch.float32)
        rank = torch.tensor(self.samples[idx]['rank'], dtype=torch.long)  # ランクは整数値として扱う
        return atomic_numbers, adsorption_energy, rank

# データローダー
batch_size = 2  # 任意のバッチサイズに変更できます
dataset = AtomicDataset(samples)
dataloader = DataLoader(dataset, batch_size=batch_size, shuffle=True, drop_last=True)

# 最初のサンプルを取得
sample_x, sample_energy, sample_rank = next(iter(dataloader))

# ここでの処理
n_classes = len(torch.unique(torch.tensor([sample['rank'] for sample in samples])))  # ユニークなrankの数を取得
image_size = len(sample_x[0])  # atomic_numbers の長さを画像のサイズとみなす（例えば、12）

# サンプルの表示
print(f"Sample atomic numbers: {sample_x}")
print(f"Sample adsorption energy: {sample_energy}")
print(f"Sample rank: {sample_rank}")
print(f"Number of classes (unique ranks): {n_classes}")
print(f"Image size (atomic numbers length): {image_size}")